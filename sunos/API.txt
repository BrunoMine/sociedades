API do Mod Sunos v1.4-dev


===================> Registrar uma estrutura
Isso significa que você deve criar variaveis dentro de uma 
tabela que servirão para definir vários parâmetros

Tabela geral de uma estrutura
sunos.estruturas[<NomeEstrutura>]

Indicador de que existe população na estrtura. Isso faz o verificador contabilizar a população para a vila.
sunos.estruturas[<NomeEstrutura>].pop = <true>

Executa uma função quando um jogador acessa o fundamento com o clique direito
sunos.estruturas[<NomeEstrutura>].fund_on_rightclick = function(pos, node, player, itemstack, pointed_thing) end

Executa uma função quando o fundamento da estrutura é destruido (caso retornar true é porque está defendido). 
Impede que jogadores mexam na area
sunos.estruturas[<NomeEstrutura>].defendido = function(pos) end

Executa verificação do fundamento para saber se a casa está defendida, se retornar true é porque algo está defendendo.
sunos.estruturas[<NomeEstrutura>].fund_on_destruct = function(pos) end

Função que avalia a estrutura quando todas as estruturas da vila estão sendo atualizadas
sunos.estruturas.casa_comunal.atualizando_vila = function(vila, arq, reg) end
	^ 'vila' (variável numérica) é um numero da vila
	^ 'arq' (variável string) é o nome do arquivo responsável por armazenar os dados da estrutura a ser atualizada
	^ 'reg' (tabela) são os dados salvos no banco de dados referentes à estrutura

===================> Registrar um NPC comum
Esse NPC obedece possui algumas configurações preliminares para facilitar a criação

Registrar npc comum
sunos.npcs.npc.registrar = function("tipo", def) end
	^ 'tipo' = "casa", ---> Nome do tipo de npc suno
	^ 'def' ---> Tabela de parametros
		^ max_dist = 15, ---> Distancia maxima que o mob pode ficar da coordenada de origem

Função on_rightclick padrão (isso é executado dessa forma, mas você pode reproduzi-lo com mais argumentos #3, #4, ...)
sunos.npcs.npc.registrados["tipo"].on_rightclick(self, player)

Função executada a cada certo periodo de segundos no npc
sunos.npcs.npc.registrados["tipo"].on_step(self)

===================> Sistema de registros
Alguns dados devem ser organizados de maneiras específicas.

Metadados do fundamento de uma estrutura (todos são armazenados no formato de strings)
"vila" ---> numero da vila correspondente (exemplo: "12")
"tipo" ---> nome do tipo de estrutura (exemplo: "casa")
"dist" ---> distância do centro até a borda em blocos (exemplo: "3")

Entidades
*variaveis da engine* ---> Variaveis que a engine mobs_redo precisar (veja a documentação da engine)
tipo ---> Nome do tipo de npc suno
loop ---> Controle de temporizador
temp ---> Temporizador gerenciado pelo mod sunos
mypos ---> Coordenada do node de origem
mynode ---> Nome do node onde o npc spawnou


